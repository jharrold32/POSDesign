/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gallagherspos;

import javax.swing.JOptionPane;

/**
 *
 * @author TrollOutpost
 */
public class SaladMenu extends javax.swing.JFrame {
    MainMenu mainMenu;
    String message;
    /**
     * Creates new form SaladMenu
     */
    public SaladMenu(MainMenu mm) {
        initComponents();
        saladsGroup.add(selectSmallGarden);
        saladsGroup.add(selectLargeGarden);
        saladsGroup.add(selectSmAnti);
        saladsGroup.add(selectLrgAnti);
        saladsGroup.add(selectSmlChick);
        saladsGroup.add(selectLrgChick);
        saladsGroup.add(selectSmGreek);
        saladsGroup.add(selectLrgGreek);
        saladsGroup.add(selectSmlVegg);
        saladsGroup.add(selectLrgVegg);
        saladsGroup.add(selectChickCeasar);
        saladsGroup.add(selectBLTWrap);
        mainMenu = mm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saladsGroup = new javax.swing.ButtonGroup();
        lblSalads = new javax.swing.JLabel();
        bMessage = new javax.swing.JButton();
        bDone = new javax.swing.JButton();
        bSubmit = new javax.swing.JButton();
        selectSmallGarden = new javax.swing.JRadioButton();
        selectLargeGarden = new javax.swing.JRadioButton();
        selectSmAnti = new javax.swing.JRadioButton();
        selectLrgAnti = new javax.swing.JRadioButton();
        selectSmlChick = new javax.swing.JRadioButton();
        selectLrgChick = new javax.swing.JRadioButton();
        selectSmGreek = new javax.swing.JRadioButton();
        selectLrgGreek = new javax.swing.JRadioButton();
        selectSmlVegg = new javax.swing.JRadioButton();
        selectLrgVegg = new javax.swing.JRadioButton();
        selectChickCeasar = new javax.swing.JRadioButton();
        selectBLTWrap = new javax.swing.JRadioButton();
        bClear = new javax.swing.JButton();
        lblDressings = new javax.swing.JLabel();
        selectRanch = new javax.swing.JCheckBox();
        selectCaesar = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblSalads.setText("Salads");

        bMessage.setText("Message");
        bMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMessageActionPerformed(evt);
            }
        });

        bDone.setText("Done");
        bDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDoneActionPerformed(evt);
            }
        });

        bSubmit.setText("Submit");
        bSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSubmitActionPerformed(evt);
            }
        });

        selectSmallGarden.setText("Small Garden Salad");

        selectLargeGarden.setText("Large Garden Salad");

        selectSmAnti.setText("Small Anti-Pasto Salad");

        selectLrgAnti.setText("Large Anti-Pasto Salad");

        selectSmlChick.setText("Small Chicken Ceasar Salad");

        selectLrgChick.setText("Large Chicken Ceasar Salad");

        selectSmGreek.setText("Small Greek Salad");

        selectLrgGreek.setText("Large Greek Salad");

        selectSmlVegg.setText("Small Veggie Salad");

        selectLrgVegg.setText("Large Veggie Salad");

        selectChickCeasar.setText("Chicken Ceasar Wrap");

        selectBLTWrap.setText("BLT Wrap");

        bClear.setText("Clear all");
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        lblDressings.setText("Dressings");

        selectRanch.setText("Ranch");

        selectCaesar.setText("Caesar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectSmallGarden)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(selectLargeGarden)
                                            .addComponent(selectSmAnti)
                                            .addComponent(selectLrgAnti)
                                            .addComponent(selectSmlChick)
                                            .addComponent(selectLrgChick))
                                        .addGap(28, 28, 28)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(selectBLTWrap)
                                            .addComponent(selectLrgGreek)
                                            .addComponent(selectSmlVegg)
                                            .addComponent(selectLrgVegg)
                                            .addComponent(selectSmGreek)
                                            .addComponent(selectChickCeasar))))
                                .addGap(160, 160, 160)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectRanch)
                                    .addComponent(selectCaesar))
                                .addGap(0, 76, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(bMessage)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(bSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bDone, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(bClear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(lblSalads)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDressings)
                        .addGap(102, 102, 102))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSalads)
                    .addComponent(lblDressings))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectSmallGarden)
                    .addComponent(selectSmGreek)
                    .addComponent(selectRanch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectLargeGarden)
                    .addComponent(selectLrgGreek)
                    .addComponent(selectCaesar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectSmAnti, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectSmlVegg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectLrgAnti)
                    .addComponent(selectLrgVegg))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectSmlChick)
                    .addComponent(selectChickCeasar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectLrgChick)
                    .addComponent(selectBLTWrap))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bMessage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bSubmit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bDone)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bClear)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDoneActionPerformed
        this.dispose();
    }//GEN-LAST:event_bDoneActionPerformed

    private void bMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMessageActionPerformed
        message = JOptionPane.showInputDialog(null, "Enter Message:");
    }//GEN-LAST:event_bMessageActionPerformed

    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        int sure = JOptionPane.showConfirmDialog(null, "Are you sure?");
        if(sure == JOptionPane.YES_OPTION) {
            saladsGroup.clearSelection();
        }
    }//GEN-LAST:event_bClearActionPerformed

    private void bSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSubmitActionPerformed
        if(checkButtons()) {
            OrderItem oi = new OrderItem();
            oi.setMessage(message);
            oi.setPrice(getPrice());
            oi.setName(getName());
            mainMenu.addToOrder(oi);
            saladsGroup.clearSelection();
        }
    }//GEN-LAST:event_bSubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaladMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaladMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaladMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaladMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new SaladMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bClear;
    private javax.swing.JButton bDone;
    private javax.swing.JButton bMessage;
    private javax.swing.JButton bSubmit;
    private javax.swing.JLabel lblDressings;
    private javax.swing.JLabel lblSalads;
    private javax.swing.ButtonGroup saladsGroup;
    private javax.swing.JRadioButton selectBLTWrap;
    private javax.swing.JCheckBox selectCaesar;
    private javax.swing.JRadioButton selectChickCeasar;
    private javax.swing.JRadioButton selectLargeGarden;
    private javax.swing.JRadioButton selectLrgAnti;
    private javax.swing.JRadioButton selectLrgChick;
    private javax.swing.JRadioButton selectLrgGreek;
    private javax.swing.JRadioButton selectLrgVegg;
    private javax.swing.JCheckBox selectRanch;
    private javax.swing.JRadioButton selectSmAnti;
    private javax.swing.JRadioButton selectSmGreek;
    private javax.swing.JRadioButton selectSmallGarden;
    private javax.swing.JRadioButton selectSmlChick;
    private javax.swing.JRadioButton selectSmlVegg;
    // End of variables declaration//GEN-END:variables

    private double getPrice() {
        double thePrice = 0.0;
        if(selectBLTWrap.isSelected()) {
            thePrice += Prices.BLT_WRAP_PRICE;
        } else if(selectChickCeasar.isSelected()) {
            thePrice += Prices.CAESAR_WRAP_PRICE;
        } else if(selectLargeGarden.isSelected()) {
            thePrice += Prices.LARGE_GARDEN_PRICE;
        } else if(selectLrgAnti.isSelected()) {
            thePrice += Prices.LARGE_ANTI_PRICE;
        } else if(selectLrgChick.isSelected()) {
            thePrice += Prices.LARGE_CEASAR_PRICE;
        } else if(selectLrgVegg.isSelected()) {
            thePrice += Prices.LARGE_VEGGIE_PRICE;
        } else if(selectSmAnti.isSelected()) {
            thePrice += Prices.SMALL_ANTI_PRICE;
        } else if(selectSmallGarden.isSelected()) {
            thePrice += Prices.SMALL_GARDEN_PRICE;
        } else if(selectLrgGreek.isSelected()) {
            thePrice += Prices.LARGE_GREEK_PRICE;
        } else if(selectSmGreek.isSelected()) {
            thePrice += Prices.SMALL_GREEK_PRICE;
        } else if(selectSmlChick.isSelected()) {
            thePrice += Prices.SMALL_CEASAR_PRICE;
        } else if(selectSmlVegg.isSelected()) {
            thePrice += Prices.SMALL_VEGGIE_PRICE;
        }
        return thePrice;
    }
    @Override
    public String getName() {
        String theName = "";
        if(selectBLTWrap.isSelected()) {
            theName += "BLT Wrap";
        } else if(selectChickCeasar.isSelected()) {
            theName += "Chicken Ceasar Wrap";
        } else if(selectLargeGarden.isSelected()) {
            theName += "Large Garden Salad";
        } else if(selectLrgAnti.isSelected()) {
            theName += "Large Anti-Pasto Salad";
        } else if(selectLrgChick.isSelected()) {
            theName += "Large Chicken Ceasar Salad";
        } else if(selectLrgVegg.isSelected()) {
            theName += "Large Veggie Salad";
        } else if(selectSmAnti.isSelected()) {
            theName += "Small Anti-Pasto Salad";
        } else if(selectSmallGarden.isSelected()) {
            theName += "Small Garden Salad";
        } else if(selectLrgGreek.isSelected()) {
            theName += "Large Greek Salad";
        } else if(selectSmGreek.isSelected()) {
            theName += "Small Greek Salad";
        } else if(selectSmlChick.isSelected()) {
            theName += "Small Chicken Ceasar Salad";
        } else if(selectSmlVegg.isSelected()) {
            theName += "Small Veggie Salad";
        }
        return theName;
         
    }

    private boolean checkButtons() {
        boolean check = false;
        if(selectBLTWrap.isSelected()) {
            check = true;
        } else if(selectChickCeasar.isSelected()) {
            check = true;
        } else if(selectLargeGarden.isSelected()) {
            check = true;
        } else if(selectLrgAnti.isSelected()) {
            check = true;
        } else if(selectLrgChick.isSelected()) {
            check = true;
        } else if(selectLrgVegg.isSelected()) {
            check = true;
        } else if(selectSmAnti.isSelected()) {
            check = true;
        } else if(selectSmallGarden.isSelected()) {
            check = true;
        } else if(selectLrgGreek.isSelected()) {
            check = true;
        } else if(selectSmGreek.isSelected()) {
            check = true;
        } else if(selectSmlChick.isSelected()) {
            check = true;
        } else if(selectSmlVegg.isSelected()) {
            check = true;
        }
        return check;
    }
}
